#Import's

import time

###CONDICIONAIS E RECURSVIDADE

##O operador mÃ³dulo permite que seja possÃ­vel verificar se um nÃºmero Ã© divisÃ­vel por outro

#Exemplo de cÃ³digo com operador mÃ³dulo: ðŸ‘‡

def operador_do_modulo():
    num_1 = int(input("Insira nÃºmero 1: "))
    num_2 = int(input("Insira nÃºmero 2: "))
    if num_1 % num_2 == 0:
        print(f"{num_1} Ã© divisÃ­vel por {num_2}")
    else:
        print(f"{num_1} nÃ£o Ã© divisÃ­vel por {num_2}")

###EXPREÃ‡Ã•ES BOOLEANAS

##Uma expressÃ£o booleana Ã© uma expressÃ£o que pode ser verdadeira ou falsa
        
##True e False sÃ£o valores especiais que pertencem ao tipo bool; (nÃ£o sÃ£o strings)

##Segue alguns exemplos dos operadores relacionais:
# x == y (operador de igualdade)
# x!= y (operador de diferenÃ§a)
# x > y (operador de maior que)
# x < y (operador de menor que)
# x >= y (operador de maior igual que)
# x <= y (operador de menor igual que)

#Exemplo de cÃ³digo com os operadores relacionais:

def operadores_relacionais():
    x = int(input("Insira o valor de x: "))
    y = int(input("Insira o valor de y: "))
    if x == y:
        print("x e y tÃªem o mesmo valor")
    if x > y:
        print("x Ã© maior que y")
    if x < y:
        print("x Ã© menor que y")

###RECURSIVIDADE

def countdown():
    n = 15
    if n > 0:
        print(n)
        for i in range(n - 1):
            time.sleep(1)
            n = (n - 1)
            print(n)
        print("Blastoff!")

operadores_relacionais()